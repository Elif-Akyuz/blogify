name: Blogify CI/CD Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to deploy (main or develop)'
        required: true
        default: 'main'

jobs:
  lint:
    name: Lint Code with flake8
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install flake8
        run: |
          python -m pip install --upgrade pip
          pip install flake8

      - name: Run flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=100 --statistics

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Cache pip dependencies
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Run Tests
        run: pytest --tb=short -q

  deploy:
    name: Deploy to Render
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'

    steps:
      - name: Determine Target Branch
        id: vars
        run: echo "branch=${{ github.event.inputs.branch != '' && github.event.inputs.branch || github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Trigger Render Deployment
        run: |
          BRANCH="${{ steps.vars.outputs.branch }}"
          if [[ "$BRANCH" == "main" ]]; then
            echo "Deploying to PRODUCTION..."
            curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_PROD }}"
          elif [[ "$BRANCH" == "develop" ]]; then
            echo "Deploying to STAGING..."
            curl -X POST "${{ secrets.RENDER_DEPLOY_HOOK_STAGING }}"
          else
            echo "No deployment target defined for branch: $BRANCH"
            exit 1
          fi

  healthcheck:
    name: Post-Deploy Health Check
    runs-on: ubuntu-latest
    needs: deploy

    steps:
      - name: Determine Target Branch
        id: vars
        run: echo "branch=${{ github.event.inputs.branch != '' && github.event.inputs.branch || github.ref_name }}" >> $GITHUB_OUTPUT

      - name: Check Service Health
        run: |
          BRANCH="${{ steps.vars.outputs.branch }}"
          if [[ "$BRANCH" == "main" ]]; then
            URL="https://blogify-prod.onrender.com/health"
          elif [[ "$BRANCH" == "develop" ]]; then
            URL="https://blogify-staging.onrender.com/health"
          else
            echo "No healthcheck URL for branch: $BRANCH"; exit 1
          fi

          echo "üîÅ Healthcheck starting for $URL..."
          
          for i in {1..10}; do
            STATUS=$(curl -s -o /dev/null -w "%{http_code}" $URL)
            if [[ "$STATUS" == "200" ]]; then
              echo "‚úÖ Service is healthy."
              exit 0
            fi
            echo "Waiting... ($i)"
            sleep 5
          done

          echo "‚ùå Service did not become healthy after deploy."
          exit 1
